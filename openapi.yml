openapi: '3.0.2'
info:
  title: Pushserver API
  version: "0.1"
  description: HTTP API for the open pushserver implementation.

security:
  - basic_auth: []

paths:
  /version:
    get:
      security: []
      tags:
        - version
      summary: Return the server api version.
      responses:
        '200':
          description: Server api version.
          content:
            application/json:
              schema:
                $ref: "#components/schemas/Version"
  /user:
    get:
      tags:
        - user
      summary: Return all users.
      responses:
        '200':
          description: A list of all users.
          content:
            application/json:    
              schema:
                $ref: "#/components/schemas/Users"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    post:
      tags: 
        - user
      summary: Add a user.
      requestBody:
        description: the user to add
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/User"
      responses:
        '201':
          description: Created.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          
  /user/{id}:
    get:
      tags: 
        - user
      summary: Get a user.
      parameters:
        - name: id
          in: path
          required: true
          description: The id of the user to retrieve
          schema:
            type: string
      responses:
        '200':
          description: Ok.
          content:
            application/json:    
              schema:
                $ref: "#/components/schemas/User"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    post:
      operationId: api.user.update
      tags: 
        - user
      summary: Update a user.
      parameters:
        - name: id
          in: path
          required: true
          description: The id of the user to update
          schema:
            type: string
      requestBody:
        description: Updated user details.
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/User"
          
      responses:
        '200':
          description: Created.
          content:
            application/json:    
              schema:
                $ref: "#/components/schemas/User"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    delete:
      tags:
        - user
      summary: Delete a user.
      parameters: 
        - name: id
          in: path
          required: true
          description: The id of the user to delete.
          schema:
            type: string
      responses:
        '204':
          description: Ok.
  
  /client:
    get:
      tags: 
        - client
      summary: Return all clients.
      responses:
        '200':
          description: A list of all clients for the current user.
          content:
            application/json:    
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Client"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

    delete:
      operationId: api.client.delete_self
      tags:
        - client
      summary: Delete current client.
      security:
        - client_key: []
      responses:
        '200':
          description: Ok.
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

    post:
      tags:
        - client
      summary: Create a new client.
      requestBody:
        description: Client to add
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ClientRegistration"
      responses:
        '201':
          description: Created.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Client"

        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
                
  /client/{id}:
    put:
      tags:
        - client
      summary: Update a client.
      parameters:
        - name: id
          in: path
          required: true
          description: The id of the client to update
          schema:
            type: string
      requestBody:
        description: Updated client details.
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Client"
          
      responses:
        '200':
          description: Ok.
          content:
            application/json:    
              schema:
                $ref: "#/components/schemas/Client"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    delete:
      tags:
        - client
      summary: Delete a client.
      parameters:
        - name: id
          in: path
          required: true
          description: The id of the client to delete
          schema:
            type: string
      responses:
        '200':
          description: Ok.
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
                
  /application:
    get:
      security:
        - client_key: []
      tags:
        - application
      summary: Get a list of all registered applications.
      responses:
        '200':
          description: Ok.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Application"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    post:
      security:
        - client_key: []
      tags:
        - application
      summary: Register a new application.
      requestBody:
        description: Application to add
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AppRegistration"
      responses:
        '201':
          description: Created.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Application"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
                
  /application/{id}:
    delete:
      security:
        - client_key: []
      tags:
        - application
      summary: Delete an application.
      parameters:
        - name: id
          in: path
          required: true
          description: The id of the app to delete.
          schema:
            type: string
      responses:
        '204':
          description: Deleted.
      
    
  /message:
    post:
      security: []
      summary: Post a message.
      tags: [message]
      requestBody:
        description: Message to post.
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Message"
      responses:
        '200':
          description: Message posted.
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /subscribe:
    get:
      operationId: api.message.subscribe
      security:
        - client_key: []
      summary: Subscribe to messages delivered via SSE (Server Sent Events) here
      tags: [message]
      responses:
        '200':
          description: Subscribed.
          content:
            text/event-stream: {}
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      
  
components:
  securitySchemes:
    client_key:
      type: apiKey
      name: X-Openpush-Key
      in: header
      x-apikeyInfoFunc: auth.clientkey_auth
    basic_auth:
      type: http
      scheme: basic
      x-basicInfoFunc: auth.basic_auth
  schemas:
    User:
      required:
        - id
        - name
        - password
        - clients
      properties:
        id:
          readOnly: true
          type: integer
          format: int64
          example: 783
        name:
          type: string
          example: "User1"
        password:
          writeOnly: true
          format: string
          example: "SuperPassword123"
        clients:
          readOnly: true
          type: array
          items:
            $ref: "#/components/schemas/Client"

    Users:
      type: array
      items:
        $ref: "#/components/schemas/User"
        
    Application:
      description: A registered application installed on a client
      required:
        - registration_id
        - routing_token
      properties:
        registration_id:
          example: "XXAAj76gkjlsfdhalSKL"
          type: string
        routing_token:
          readOnly: true
          description: Token to target a mobile application.
          example: "8904j76gkjlsfdhalSKL"
          type: string

    AppRegistration:
      description: Data for registering a new App
      required:
        - registration_id
      properties:
        registration_id:
          description: Token with which the pushclient can identify the target application, so it doesn't have to store routing token.
          example: "XXAAj76gkjlsfdhalSKL"
          type: string

    ClientRegistration:
      description: Data for registering a new client
      required:
        - name
      properties:
        name:
          example: "Phone 1"
          type: string

    Client:
      description: A mobile client
      required:
        - id
        - name
        - applications
        - token
      properties:
        id:
          readOnly: true
          type: integer
          format: int64
        name:
          example: "Phone 1"
          type: string
        token:
          example: "WDKZMxUFpdjlgiFVSx2A2rP5GSM"
          type: string
          readOnly: true
        applications:
          readOnly: true
          type: array
          items:
            $ref: "#/components/schemas/Application"
      
    Message:
      required:
        - token
        - data
      properties:
        token:
          type: string
          example: "8904j76gkjlsfdhalSKL"
          description: Token to target a mobile application.
        data:
          description: Key value pairs to be delivered to the targeted application.
          example:
            title: "New Message"
            body: "You got a new message!"
            foo: bar
          type: object
          additionalProperties: {}
        priority:
          description: (currently unused)
          type: string
          enum: [normal, high]
        time_to_live:
          type: integer
          example: 2419200
          description: (currently unused) How long to store the message (in seconds) for offline devices
        collapse_key:
          type: string
          description: (currently unused) Store only one message per collapse_key, set to something different to store multiple messages

    Error:
      required:
        - detail
        - status
        - title
        - type
      properties:
        status:
          type: integer
          format: int32
        detail:
          type: string
        title:
          type: string
        type:
          type: string

    Version:
      required:
        - version
      properties:
        version:
          type: string
          example: 0.1.1